{"version":3,"file":"imgFile.js","names":["ImgFile","constructor","_defineProperty2","default","name","file","forceUpdate","store","defaultValue","exports"],"sources":["../src/imgFile.ts"],"sourcesContent":["/*\n * @Author: donggg\n * @LastEditors: donggg\n * @Date: 2021-04-27 11:57:19\n * @LastEditTime: 2021-07-05 16:04:41\n */\n\nexport default class ImgFile {\n\tprivate store: Record<string, File>;\n\n\tconstructor() {\n\t\tthis.store = {};\n\t}\n\n\t/**\n\t * 缓存图片文件\n\t * @param {*} name 图片key\n\t * @param {*} file 图片File文件\n\t * @param {*} forceUpdate 如果已经存在是否更新\n\t */\n\tsaveImgFiles = (name: string, file: File, forceUpdate = false): void => {\n\t\tif (this.store[name] && !forceUpdate) {\n\t\t\treturn;\n\t\t}\n\t\tthis.store[name] = file;\n\t};\n\n\t/**\n\t * 获取图片文件\n\t * @param {*} name 图片key\n\t * @param {*} defaultValue 当文件未查询到时，默认文件\n\t * @returns 返回 File 文件，或者 defaultValue\n\t */\n\tgetImgFile = <T>(name: string, defaultValue: T): File | T =>\n\t\tthis.store[name] || defaultValue;\n\n\t/**\n\t * 返回存储的图片对象\n\t * @returns {*}\n\t */\n\tgetAllImgFiles = (): { [key: string]: File } => this.store;\n\n\t/**\n\t * 清空图片的存储空间\n\t */\n\tresetImgFiles = (): Record<string, never> => (this.store = {});\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEe,MAAMA,OAAO,CAAC;EAG5BC,WAAWA,CAAA,EAAG;IAAA,IAAAC,gBAAA,CAAAC,OAAA;IAId;AACD;AACA;AACA;AACA;AACA;IALC,IAAAD,gBAAA,CAAAC,OAAA,wBAMe,CAACC,IAAY,EAAEC,IAAU,EAAEC,WAAW,GAAG,KAAK,KAAW;MACvE,IAAI,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,IAAI,CAACE,WAAW,EAAE;QACrC;MACD;MACA,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,GAAGC,IAAI;IACxB,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IALC,IAAAH,gBAAA,CAAAC,OAAA,sBAMa,CAAIC,IAAY,EAAEI,YAAe,KAC7C,IAAI,CAACD,KAAK,CAACH,IAAI,CAAC,IAAII,YAAY;IAEjC;AACD;AACA;AACA;IAHC,IAAAN,gBAAA,CAAAC,OAAA,0BAIiB,MAA+B,IAAI,CAACI,KAAK;IAE1D;AACD;AACA;IAFC,IAAAL,gBAAA,CAAAC,OAAA,yBAGgB,MAA8B,IAAI,CAACI,KAAK,GAAG,CAAC,CAAE;IAlC7D,IAAI,CAACA,KAAK,GAAG,CAAC,CAAC;EAChB;AAkCD;AAACE,OAAA,CAAAN,OAAA,GAAAH,OAAA","ignoreList":[]}