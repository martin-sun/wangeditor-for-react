{"version":3,"file":"helper.js","names":["isEqualString","value1","value2","exports","isEmpty","value","undefined","isNaN","length","Object","keys","difference","array","values","result","includes","push","isValidKey","key","object","_default","default"],"sources":["../../src/utils/helper.ts"],"sourcesContent":["/*\n * @Author: dongmin\n * @LastEditors: donggg\n * @Date: 2021-04-02 18:36:57\n * @LastEditTime: 2021-07-05 16:05:05\n */\n\n/**\n * 简单判断两个值是否相当\n * @param {string} 值1\n * @param {string} 值2\n * @return {boolean} 判断结果\n */\nexport const isEqualString = (value1: string, value2: string): boolean =>\n\tvalue1 === value2;\n\n/**\n * 判断是否为空\n * @param  {object|array|string|boolean|null|undefined|NaN} value 待判断值\n * @return {boolean} 判断结果\n */\nexport const isEmpty = (\n\tvalue:\n\t\t| Record<string, unknown>\n\t\t| unknown[]\n\t\t| string\n\t\t| number\n\t\t| null\n\t\t| undefined,\n): boolean => {\n\t// null, undefined\n\tif (value === null || value === undefined) {\n\t\treturn true;\n\t}\n\t// NaN\n\tif (typeof value === 'number' && value !== value) {\n\t\treturn isNaN(value);\n\t}\n\t// array\n\tif (typeof value === 'object' && value.length) {\n\t\treturn value.length === 0;\n\t}\n\t// string\n\tif (typeof value === 'string') {\n\t\treturn value === '';\n\t}\n\t// object\n\tif (typeof value === 'object') {\n\t\treturn Object.keys(value).length === 0;\n\t}\n\treturn !value;\n};\n\n/**\n * 返回给定数组不同的值\n * @param {array} array 待过滤数组\n * @param {array} values 需要过滤的值组成的数组\n * @returns {array} 返回给定数组不同的值\n */\nexport const difference = <T>(array: Array<T>, values: unknown[]): Array<T> => {\n\tconst result: Array<T> = [];\n\tfor (const value of array) {\n\t\tif (!values.includes(value)) {\n\t\t\tresult.push(value);\n\t\t}\n\t}\n\treturn result;\n};\n\n/**\n * 判断是否为该对象的键\n * @param key object 的键\n * @param editor 目标对象\n * @returns 是否是该元素的键\n */\nexport function isValidKey(\n\tkey: string | number | symbol,\n\tobject: Record<string, unknown>,\n): key is keyof typeof object {\n\treturn key in object;\n}\n\nexport default {};\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,aAAa,GAAGA,CAACC,MAAc,EAAEC,MAAc,KAC3DD,MAAM,KAAKC,MAAM;;AAElB;AACA;AACA;AACA;AACA;AAJAC,OAAA,CAAAH,aAAA,GAAAA,aAAA;AAKO,MAAMI,OAAO,GACnBC,KAMY,IACC;EACb;EACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE;IAC1C,OAAO,IAAI;EACZ;EACA;EACA,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAKA,KAAK,EAAE;IACjD,OAAOE,KAAK,CAACF,KAAK,CAAC;EACpB;EACA;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACG,MAAM,EAAE;IAC9C,OAAOH,KAAK,CAACG,MAAM,KAAK,CAAC;EAC1B;EACA;EACA,IAAI,OAAOH,KAAK,KAAK,QAAQ,EAAE;IAC9B,OAAOA,KAAK,KAAK,EAAE;EACpB;EACA;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC9B,OAAOI,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC,CAACG,MAAM,KAAK,CAAC;EACvC;EACA,OAAO,CAACH,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALAF,OAAA,CAAAC,OAAA,GAAAA,OAAA;AAMO,MAAMO,UAAU,GAAGA,CAAIC,KAAe,EAAEC,MAAiB,KAAe;EAC9E,MAAMC,MAAgB,GAAG,EAAE;EAC3B,KAAK,MAAMT,KAAK,IAAIO,KAAK,EAAE;IAC1B,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACV,KAAK,CAAC,EAAE;MAC5BS,MAAM,CAACE,IAAI,CAACX,KAAK,CAAC;IACnB;EACD;EACA,OAAOS,MAAM;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AALAX,OAAA,CAAAQ,UAAA,GAAAA,UAAA;AAMO,SAASM,UAAUA,CACzBC,GAA6B,EAC7BC,MAA+B,EACF;EAC7B,OAAOD,GAAG,IAAIC,MAAM;AACrB;AAAC,IAAAC,QAAA,GAAAjB,OAAA,CAAAkB,OAAA,GAEc,CAAC,CAAC","ignoreList":[]}