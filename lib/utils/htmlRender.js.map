{"version":3,"file":"htmlRender.js","names":["isHTML","input","test","hasImgTag","getImgSrcByHTMLString","imgBlobURLArray","pattern","content","replace","r","exec","push","replaceHTMLImgBlobURL","files","replaceCallback","v","undefined","toString","console","error","Object","keys","length","blobSrcArray","copy","map","imgSrc","file","exports"],"sources":["../../src/utils/htmlRender.ts"],"sourcesContent":["/*\n * @Author: donggg\n * @LastEditors: donggg\n * @Date: 2021-04-27 18:22:43\n * @LastEditTime: 2021-07-03 23:46:15\n */\n\n// 是否有 html 标签\nconst isHTML = (input: string): boolean =>\n\t/<(\\S*?) [^>]*>.*?<\\/\\1>|<.*?>/gm.test(input);\n\n// 是否有 img 标签\nconst hasImgTag = (input: string): boolean =>\n\t/<img.*?src=\\\\?\"(.*?)\\\\?\".*?\\/?>/.test(input);\n\n/**\n * 根据 html 文本获取 src 地址\n * @param {string} input html 文本\n * @returns {array} html 文本中 src 地址组成的数组\n */\nconst getImgSrcByHTMLString = (input: string): Array<RegExpExecArray> => {\n\tconst imgBlobURLArray: Array<RegExpExecArray> = [];\n\tconst pattern = /<img.*?src=\\\\?\"(.*?)\\\\?\".*?\\/?>/gi;\n\tconst content = input.replace('\\\\\"', '\"');\n\tlet r: RegExpExecArray | null | undefined;\n\twhile (r !== null) {\n\t\tr = pattern.exec(content);\n\t\tif (r) {\n\t\t\timgBlobURLArray.push(r);\n\t\t}\n\t}\n\treturn imgBlobURLArray;\n};\n\n/**\n * 替换 html 中的 img 标签的 src 引用地址\n * @param {string} content html 文本\n * @param {*} files 缓存的 File\n * @param {function} replaceCallback 替换过程的回调函数，参数是 Flie\n * @returns {string} 替换后的 html 文本\n */\nexport const replaceHTMLImgBlobURL = (\n\tcontent: string,\n\tfiles: Record<string, File>,\n\treplaceCallback = (v: File | { toString: () => string }) =>\n\t\tv !== undefined ? v.toString() : v,\n): string => {\n\tif (typeof content !== 'string') {\n\t\tconsole.error('[Type Error]: content is not string');\n\t\treturn '';\n\t}\n\n\tif (!Object.keys(files).length && hasImgTag(content)) {\n\t\tconsole.error('[File Error]: files is empty');\n\t\treturn content;\n\t}\n\n\tif (isHTML(content) && hasImgTag(content)) {\n\t\tconst blobSrcArray = getImgSrcByHTMLString(content);\n\t\tif (blobSrcArray.length) {\n\t\t\tlet copy = content;\n\t\t\tblobSrcArray.map((pattern) => {\n\t\t\t\tif (pattern && pattern[0]) {\n\t\t\t\t\tconst imgSrc = pattern[1];\n\t\t\t\t\tconst file: File | undefined = files[imgSrc];\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tcopy = copy.replace(pattern[1], replaceCallback(file));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn copy;\n\t\t}\n\t}\n\treturn content;\n};\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,MAAM,GAAIC,KAAa,IAC5B,iCAAiC,CAACC,IAAI,CAACD,KAAK,CAAC;;AAE9C;AACA,MAAME,SAAS,GAAIF,KAAa,IAC/B,iCAAiC,CAACC,IAAI,CAACD,KAAK,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA,MAAMG,qBAAqB,GAAIH,KAAa,IAA6B;EACxE,MAAMI,eAAuC,GAAG,EAAE;EAClD,MAAMC,OAAO,GAAG,mCAAmC;EACnD,MAAMC,OAAO,GAAGN,KAAK,CAACO,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EACzC,IAAIC,CAAqC;EACzC,OAAOA,CAAC,KAAK,IAAI,EAAE;IAClBA,CAAC,GAAGH,OAAO,CAACI,IAAI,CAACH,OAAO,CAAC;IACzB,IAAIE,CAAC,EAAE;MACNJ,eAAe,CAACM,IAAI,CAACF,CAAC,CAAC;IACxB;EACD;EACA,OAAOJ,eAAe;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMO,qBAAqB,GAAGA,CACpCL,OAAe,EACfM,KAA2B,EAC3BC,eAAe,GAAIC,CAAoC,IACtDA,CAAC,KAAKC,SAAS,GAAGD,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAGF,CAAC,KACvB;EACZ,IAAI,OAAOR,OAAO,KAAK,QAAQ,EAAE;IAChCW,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;IACpD,OAAO,EAAE;EACV;EAEA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC,CAACS,MAAM,IAAInB,SAAS,CAACI,OAAO,CAAC,EAAE;IACrDW,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;IAC7C,OAAOZ,OAAO;EACf;EAEA,IAAIP,MAAM,CAACO,OAAO,CAAC,IAAIJ,SAAS,CAACI,OAAO,CAAC,EAAE;IAC1C,MAAMgB,YAAY,GAAGnB,qBAAqB,CAACG,OAAO,CAAC;IACnD,IAAIgB,YAAY,CAACD,MAAM,EAAE;MACxB,IAAIE,IAAI,GAAGjB,OAAO;MAClBgB,YAAY,CAACE,GAAG,CAAEnB,OAAO,IAAK;QAC7B,IAAIA,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1B,MAAMoB,MAAM,GAAGpB,OAAO,CAAC,CAAC,CAAC;UACzB,MAAMqB,IAAsB,GAAGd,KAAK,CAACa,MAAM,CAAC;UAC5C,IAAIC,IAAI,EAAE;YACTH,IAAI,GAAGA,IAAI,CAAChB,OAAO,CAACF,OAAO,CAAC,CAAC,CAAC,EAAEQ,eAAe,CAACa,IAAI,CAAC,CAAC;UACvD;QACD;MACD,CAAC,CAAC;MACF,OAAOH,IAAI;IACZ;EACD;EACA,OAAOjB,OAAO;AACf,CAAC;AAACqB,OAAA,CAAAhB,qBAAA,GAAAA,qBAAA","ignoreList":[]}